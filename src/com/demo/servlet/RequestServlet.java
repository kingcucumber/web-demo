package com.demo.servlet;

import java.io.IOException;
import java.io.PrintWriter;
import java.security.Principal;
import java.util.Enumeration;
import java.util.Locale;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class RequestServlet extends HttpServlet {

	private String getAccept(String accept) {
		StringBuffer buffer = new StringBuffer();
		if (accept.contains("image/gif"))
			buffer.append("GIF file,");
		if (accept.contains("image/x-xbitmap"))
			buffer.append("BMP file,");
		if (accept.contains("image/jpeg"))
			buffer.append("JPEG file,");
		if (accept.contains("application/vnd.ms-excel"))
			buffer.append("Excel file,");
		if (accept.contains("application/vnd.ms-powerpoint"))
			buffer.append("PPT file,");
		if (accept.contains("application/msword"))
			buffer.append("Word file ,");

		return buffer.toString().replace(",$", "");
	}

	private String getLocale(Locale locale) {
		if (Locale.SIMPLIFIED_CHINESE.equals(locale))
			return "ç®€ä½“ä¸­æ–‡";
		if (Locale.TRADITIONAL_CHINESE.equals(locale))
			return "ç¹?ä½“ä¸­æ–‡";
		if (Locale.ENGLISH.equals(locale))
			return "è‹±è¯­";
		if (Locale.JAPANESE.equals(locale))
			return "æ—¥è¯­";
		return "Unknown Language Environment";
	}

	/*
	 * private String getAddress(String ip){ return IPUtil.getIpAddress(ip); }
	 */

	private String getNavigator(String userAgent) {
		if (userAgent.indexOf("TencentTraveler") > 0)
			return "è…¾è®¯æµ?è§ˆå™¨";
		if (userAgent.indexOf("Maxthon") > 0)
			return "é?¨æ¸¸æµ?è§ˆå™¨";
		if (userAgent.indexOf("MyIE2") > 0)
			return "MyIE2 æµ?è§ˆå™¨";
		if (userAgent.indexOf("Firefox") > 0)
			return "ç?«ç‹?æµ?è§ˆå™¨";
		if (userAgent.indexOf("MSIE") > 0)
			return "IEæµ?è§ˆå™¨";
		return "Unknown browser";
	}

	private String getOS(String userAgent) {
		if (userAgent.indexOf("Windows NT 5.1") > 0)
			return "Windows XP";
		if (userAgent.indexOf("Windows 98") > 0)
			return "Windows 98";
		if (userAgent.indexOf("Windows NT 5.0") > 0)
			return "Windows 2000";
		if (userAgent.indexOf("Unix") > 0)
			return "Unix";
		return "Unknown Operation System";
	}

	public void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		response.setCharacterEncoding("UTF-8");
		request.setCharacterEncoding("UTF-8");
		
		Enumeration e = this.getServletContext().getAttributeNames();
		while(e.hasMoreElements()){
			String con = (String) e.nextElement();
			System.out.println(con);
			
		}

		String servletName = this.getServletConfig().getServletName();
		System.out.println(servletName);
		
		
		
		response.setContentType("text/html");
		String authType = request.getAuthType();
		String localAddr = request.getLocalAddr();
		String localName = request.getLocalName();
		int localPort = request.getLocalPort();

		Locale locale = request.getLocale();
		String contextPath = request.getContextPath();
		String method = request.getMethod();
		String pathInfo = request.getPathInfo();
		String pathTranslated = request.getPathTranslated();
		String protocol = request.getProtocol();
		String queryString = request.getQueryString();

		String remoteAddr = request.getRemoteAddr();

		int port = request.getRemotePort();
		String remoteUser = request.getRemoteUser();
		String requestSessionId = request.getRequestedSessionId();
		String requestURI = request.getRequestURI();
		StringBuffer requestURL = request.getRequestURL();

		String scheme = request.getScheme();
		String serverName = request.getServerName();
		int serverPort = request.getServerPort();
		String servletPath = request.getServletPath();
		Principal userPrincipal = request.getUserPrincipal();

		String accept = request.getHeader("accept");
		String referer = request.getHeader("referer");
		String userAgent = request.getHeader("user-Agent");
		String serverInfo = this.getServletContext().getServerInfo();

		PrintWriter out = response.getWriter();
		out.println("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">");
		out.println("<HTML>");
		out.println("<HEAD><TITLE>Request Servlet</TITLE></HEAD>");
		out.println("<Style>body,font,td,div {font-size:12px;linx-height:18px;}</style>");
		out.println("<BODY>");
		out.println("<b> æ‚¨çš„ipä¸º:</b>" + remoteAddr + "<b>;ä½?äºŽ:</b>"
				+ /* getAddress(remoteAddr) */"<b>;æ‚¨ä½¿ç”¨</b>" + getOS(userAgent)
				+ "<b>æ“?ä½œç³»ç»Ÿ</b>," + getNavigator(userAgent) + "<b>ã€‚æ‚¨ä½¿ç”¨</b>"
				+ getLocale(locale) + "ã€‚<br/>");
		out.println("<b>æœ?åŠ¡å™¨IPä¸º</b>" + localAddr + "<b>,ä½?äºŽ</b>"
				+ /* getAddress(localAddr) */"<b>;æœ?åŠ¡å™¨ä½¿ç”¨</b>" + serverPort
				+ "<b>ç«¯å?£ï¼Œæ‚¨çš„æµ?è§ˆå™¨ä½¿ç”¨äº†</b>" + port + "<b>ç«¯å?£è®¿é—®æœ¬ç½‘é¡µã€‚</b><br/>");
		out.println("<b>æœ?åŠ¡å™¨è½¯ä»¶ä¸º</b>:" + serverInfo + ".<b>æœ?åŠ¡å™¨å??ç§°ä¸º</b>"
				+ localName + "ã€‚<br/>");
		out.println("<b>æ‚¨çš„æµ?è§ˆå™¨æŽ¥å?—</b>" + getAccept(accept) + "ã€‚<br/>");
		out.println("<b>æ‚¨ä»Ž</b>" + referer + "<b>è®¿é—®åˆ°è¯¥é¡µé?¢.</b><br/>");
		out.println("<b>ä½¿ç”¨çš„å??è®®ä¸º" + protocol + ".<b>URLå??è®®å¤´</b>" + scheme
				+ ",<b>æœ?åŠ¡å™¨å??ç§°</b>" + serverName + ".<b>æ‚¨è®¿é—®çš„URIä¸º</b>"
				+ requestURI + ".<br/>");
		out.println("<b>è¯¥Servletè·¯å¾„ä¸º</b>" + servletPath + ",<b>è¯¥Servletç±»å??ä¸º</b>"
				+ this.getClass().getName() + ".<br/>");
		out.println("<b>æœ¬åº”ç”¨ç¨‹åº?åœ¨ç¡¬ç›˜çš„æ ¹ç›®å½•ä¸º</b>"
				+ this.getServletContext().getRealPath("") + ",<b>ç½‘ç»œç›¸å¯¹è·¯å¾„ä¸º</b>"
				+ contextPath + ".<br/>");
		out.println("<br/>");
		out.println("<br/><br/><a href=" + requestURI + ">æ‰“å‡»åˆ·æ–°è¯¥é¡µé?¢!</a>");
		out.println("<BODY>");
		out.println("</HTML>");
		out.flush();
		out.close();

	}
}
